spring:
  application:
    name: neobrutalism-crm

  datasource:
    url: jdbc:h2:mem:crmdb
    driver-class-name: org.h2.Driver
    username: sa
    password:

  h2:
    console:
      enabled: true
      path: /h2-console

  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.H2Dialect
        enable_lazy_load_no_trans: false
        # Query Performance Monitoring
        generate_statistics: true
        session:
          events:
            log:
              LOG_QUERIES_SLOWER_THAN_MS: 1000
    open-in-view: false

  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true

  jackson:
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false

server:
  port: 8080
  error:
    include-message: always
    include-binding-errors: always

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha

logging:
  level:
    root: INFO
    com.neobrutalism.crm: DEBUG
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

# Application specific properties
app:
  audit:
    enabled: true
  event-sourcing:
    enabled: true
  tenant:
    default-tenant-id: default  # Default tenant ID when no tenant context
    enabled: true               # Enable multi-tenancy
    header-name: X-Tenant-ID   # Tenant ID header name
    strict-mode: false         # false = use default tenant if missing, true = throw exception

# Event publishing configuration
events:
  use-outbox: true  # Enable Transactional Outbox Pattern (recommended for production)

# Outbox publisher configuration
outbox:
  publisher:
    interval: 5000  # Publish pending events every 5 seconds
  cleanup:
    cron: "0 0 2 * * *"  # Cleanup old events daily at 2 AM

# Multi-tenancy configuration (deprecated - use app.tenant instead)
multitenancy:
  enabled: true  # Enable/disable multi-tenancy
  default-tenant: default  # Default tenant ID for development
  tenant-header: X-Tenant-ID  # HTTP header name for tenant ID

# Rate Limiting (disabled for development - requires Redis)
rate-limit:
  enabled: false

# Actuator configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true
